# -*- coding: utf-8 -*-
"""Belajar Data Akses

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19VGqwh--JTFeGEgfqKNgVN4Y-ejfXaAr
"""

import numpy as np
import statistics as st
import pandas as pd

"""# Data Access Without Pandas"""

numpyData  = np.array([[ 2.1, -1.9,  5.5],
                      [-1.5,  2.4,  3.5],
                      [ 0.5, -7.9,  5.6],
                      [ 5.9,  2.3, -5.8]])  # using numpy

otherData  = [2, 1, 2, 2, 1, 3]             # without using numpy

"""### Access row 0, column 2"""

numpyData[0][2]

otherData[2]

"""### Access row 2, column 0"""

numpyData[2][0]

"""### Access row 1"""

numpyData[1]

"""### Access column 2"""

[col[2] for col in numpyData]

"""### Diagonal elements"""

numpyData.diagonal()

numpyData.diagonal(0)

numpyData.diagonal(1)

numpyData.diagonal(-1)

numpyData.diagonal(-2)

"""### Sum per column/row"""

# per column
numpyData.sum(axis=0)

# per row
numpyData.sum(axis=1)

"""### Min/Max per column/row"""

# per column
numpyData.min(axis=0)

# per row
numpyData.min(axis=1)

# per column
numpyData.max(axis=0)

# per row
numpyData.max(axis=1)

"""### Standard deviation per column/row"""

# per column
numpyData.std(axis=0)

# per row
numpyData.std(axis=1)

"""### Mean per column/row"""

# per column
numpyData.mean(axis=0)

# per row
numpyData.mean(axis=1)

"""### Other centroids: quantiles, median, mode

#### quantiles
"""

st.quantiles(otherData)

# row 2
st.quantiles(numpyData[2])

# column 1
st.quantiles(col[1] for col in numpyData)

"""#### median"""

st.median(otherData)

st.median_low(otherData)

st.median_high(otherData)

# row 1
st.median(numpyData[1])

# row 1
st.median_low(numpyData[1])

# row 1
st.median_high(numpyData[1])

# column 1
st.median(col[1] for col in numpyData)

# column 1
st.median_low(col[1] for col in numpyData)

# column 1
st.median_high(col[1] for col in numpyData)

"""#### mode"""

st.mode(otherData)

# row 0
st.mode(numpyData[0])

# row 2
st.mode(numpyData[2])

# column 2
st.mode(col[2] for col in numpyData)

"""# Data Access With Pandas"""

pandasData = pd.read_csv('sample.csv', sep=';')   # using pandas, please pay necessary attention to *sep* punctuation symbol

print(pandasData)

"""![pandas example data](attachment:sample.png)

<br>
<div align="center">pandas example data</div>
"""

df = pd.DataFrame(data=pandasData)

df

df.dtypes

df.head()

df.head(1)

df.head(2)

df.tail(2)

df.index

df.columns

df.describe()    # statistics: quantiles, min, max, mean, std, count

df.quantile(0.25)

q3 = df['feature 2'].quantile(0.75)
q1 = df['feature 2'].quantile(0.25)

q1

q3

iqr = q3 - q1

iqr

lowBound = q1 - 1.5 * iqr
uppBound = q3 + 1.5 * iqr

"""###### outliers are below this `lowBound` value, or"""

lowBound

"""###### above this `uppBound` value"""

uppBound

df['feature 2']

df['feature 1'].mode()

df['feature 1'].value_counts()

df['feature 1'].value_counts().max()

df.mode()

df.value_counts()

df.value_counts().max()

df.index

df

df.sort_values(by='feature 3')

pandasData[0:1]

pandasData[1:2]

pandasData[:2]

pandasData[1:]

pandasData.iloc[[0], [0]]

pandasData.iloc[[1], [2]]

pandasData.iloc[[1], [2]]

pandasData.iloc[[0], [0]].to_numpy() + pandasData.iloc[[1], [2]].to_numpy()

len(pandasData[0:1])

type(pandasData[0:1])

len(pandasData[1:2])

type(pandasData[1:2])

len(pandasData.iloc[[0], [0]])

type(pandasData.iloc[[0], [0]])

help(pandasData)